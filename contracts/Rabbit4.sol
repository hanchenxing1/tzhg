// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";

library Rabbit4 {
    using Strings for uint256;
    function RabbitString(string memory attack, string memory defense, uint256 kills, bool revived, string memory tokenId, uint256 mintTimestamp) public view returns (string memory) {
        string memory _daysAlive = calculateDaysAlive(mintTimestamp).toString();
        string memory _level = calculatePlayerLevel(mintTimestamp, kills).toString();
        string memory _revived = revivedToString(revived);
        string memory image1 = '<path class="st29" d="M376.91,764.58c-10.13-3.99-20.24-7.92-30.26-11.75c9.01,40.97,18.98,82.62,28.63,122.9 c6.44,26.87,13.09,54.65,19.4,81.97c39.73,3.75,80.88,6.8,120.68,9.74l0.13,0.01L492.98,821.1c0-1.62-0.23-3.08-0.66-4.39 c-0.09-0.26-0.18-0.52-0.27-0.77c-0.15-0.38-0.32-0.75-0.5-1.1c-0.12-0.23-0.25-0.46-0.38-0.69c-0.07-0.11-0.14-0.22-0.21-0.33 c-0.21-0.33-0.44-0.65-0.68-0.96c-0.24-0.31-0.49-0.61-0.76-0.9c-0.18-0.19-0.36-0.38-0.55-0.57c-3.54-3.53-8.93-5.59-13.91-7.5 c-1.35-0.52-2.62-1-3.84-1.52c-2.81-1.13-5.64-2.26-8.48-3.4c-4.24-1.7-8.51-3.42-12.75-5.12c-1.44-0.58-2.88-1.16-4.32-1.74 c-2.79-1.12-5.57-2.24-8.32-3.35c-5.6-2.26-11.24-4.53-16.9-6.81c-3.23-1.3-6.47-2.6-9.71-3.9c-3.23-1.3-6.47-2.6-9.72-3.89 c-2.61-1.05-5.22-2.09-7.84-3.13c-0.37-0.15-0.74-0.3-1.12-0.44C387.02,768.57,381.96,766.57,376.91,764.58z"/> <path class="st27" d="M473.49,274.61c-41.29,45.04-85.58,88.58-131.37,129.87c8.26-23.27,15.01-48.05,30.03-67.57 C405.18,314.39,437.45,291.12,473.49,274.61z M473.38,274.69c-10.89,4.99-21.51,10.66-31.9,16.72c-1.89,1.1-3.77,2.22-5.65,3.35 c-17.82,10.72-35.01,22.52-51.86,34.08c-1.45,1-2.92,2-4.4,3.02c-2.46,1.69-4.95,3.39-7.41,5.07 c-12.51,16.25-19.35,36.36-25.97,55.8c-0.82,2.39-1.65,4.84-2.49,7.28c-0.34,0.98-0.68,1.95-1.02,2.92 c-0.17,0.48-0.34,0.97-0.51,1.45C389.25,361.95,433.38,318.31,473.38,274.69z"/> <path class="st13" d="M374.65,1171.44c-3.39,36.02-6.89,73.27-10.73,109.79c22.5-9.76,44.61-21.19,66-32.26 c2.03-23.68,5.49-47.59,8.84-70.72c4.07-28.16,8.28-57.29,9.93-86.15c-5.16-11-10.11-21.46-14.88-31.45 c-0.6-1.25-1.19-2.49-1.78-3.73s-1.18-2.46-1.77-3.68c-0.88-1.83-1.75-3.64-2.61-5.44c-1.15-2.4-2.3-4.77-3.43-7.12 c-2.55-5.29-5.05-10.44-7.52-15.47c0-0.01-0.01-0.01-0.01-0.01c-2.19-4.47-4.35-8.85-6.47-13.16 c-2.67-5.39-5.29-10.65-7.87-15.8c-1.04-2.05-2.06-4.09-3.08-6.12c-0.01-0.01-0.01-0.01-0.01-0.01 c-1.02-2.03-2.05-4.04-3.06-6.03c-0.51-1-1.02-1.99-1.52-2.98C386.59,1044.36,380.52,1108.96,374.65,1171.44z"/> <path class="st30" d="M397.86,761.11c7.64,3.45,15.31,6.87,23.01,10.25c3.26,1.44,6.53,2.86,9.81,4.29 c50.77,22.04,102.57,42.66,152.96,62.72c8.39,3.34,16.86,6.7,25.36,10.1c25.53,10.19,51.43,20.6,76.91,31.15 c3.75-10.12,7.75-20.22,11.63-30c3.87-9.77,7.87-19.88,11.63-30c-42.45-7.69-85.64-16.16-127.41-24.35 C521.58,783.48,459.37,771.29,397.86,761.11z"/> <path class="st31" d="M403.76,967.87c-1.52-0.12-3.03-0.24-4.55-0.35c17.7,37.62,36.01,76.52,54.76,113.27 c21-33.76,40.07-69.61,58.51-104.27c-25.63-2.56-51.81-4.47-77.13-6.31c-7.59-0.55-15.34-1.11-23.13-1.7 C409.4,968.3,406.58,968.09,403.76,967.87z"/> <path class="st28" d="M413.46,350.44c0.75,6,1.71,12.1,2.62,18c0.92,5.89,1.88,11.99,2.62,17.98 c31.46-13.68,58.95-28.89,82.86-45.88c0.7-0.51,1.4-1,2.1-1.5c1.39-1.01,2.77-2.02,4.14-3.04c0.69-0.51,1.37-1.02,2.05-1.53 c0.66-0.5,1.33-1,1.99-1.51c0.01-0.01,0.02-0.02,0.04-0.03c1.34-1.03,2.67-2.07,3.99-3.11c0.91-0.72,1.81-1.44,2.72-2.17 c0.62-0.5,1.24-1,1.85-1.5c0.49-0.41,0.97-0.8,1.46-1.21c0.59-0.49,1.18-0.97,1.76-1.47c0.63-0.54,1.27-1.07,1.9-1.61 c0.62-0.53,1.24-1.06,1.85-1.59c0.01-0.01,0.02-0.02,0.03-0.03c1.75-1.52,3.47-3.05,5.18-4.59c0.12-0.12,0.24-0.23,0.36-0.33 c8.49-7.72,16.4-15.76,23.76-24.15c-1.92,0.68-3.84,1.37-5.75,2.06c-2.87,1.05-5.75,2.11-8.62,3.19 c-25.81,9.73-51.28,20.79-76.05,31.55c-2.48,1.08-4.98,2.16-7.48,3.25c-10.55,4.58-21.28,9.21-32.04,13.71 c-2.22,0.93-4.44,1.86-6.66,2.77C417.9,348.64,415.68,349.54,413.46,350.44z"/> <path class="st32" d="M490.1,273.37c-17.37,16.72-35.33,33.99-50.33,52.99c37.39-11.52,74.08-27.71,109.57-43.36 c10.79-4.76,21.95-9.69,32.97-14.41c13.5-20.54,18.31-45.36,22.95-69.37c1.27-6.56,2.59-13.35,4.05-19.87 c-11.65,9.31-24.53,17.4-36.98,25.24c-9.82,6.17-19.82,12.46-29.36,19.43s-18.64,14.65-26.67,23.59 C507.79,256.36,498.79,265.01,490.1,273.37z"/> <path class="st33" d="M459.25,1091.34c6.35,6.07,12.72,12.19,19.07,18.32c2.66,2.56,5.32,5.13,7.97,7.7 c7.9,7.64,15.75,15.25,23.48,22.75c33.06,32.07,67.24,65.24,101.81,96.81c-2.82-21.31-7.22-42.55-11.47-63.09 c-3.69-17.82-7.51-36.25-10.29-54.7c-0.26-2.34-0.52-4.68-0.77-7.03c-0.71-6.5-1.39-13.03-2.05-19.51 c-1.02-9.88-1.99-19.71-2.95-29.36c-2.76-27.84-5.62-56.63-9.24-85.2c-0.52,0.04-1.04,0.09-1.57,0.12 c-1.05,0.07-2.11,0.1-3.17,0.12c-4.5,0.08-9.12-0.2-13.63-0.47c-11.71-0.71-23.81-1.43-34.14,3.98 c-14.18,21.48-26.64,44.26-38.71,66.29C475.81,1062.27,467.76,1076.97,459.25,1091.34z"/> <path class="st35" d="M500.16,1311.25c-0.37,0.52-0.74,1.03-1.11,1.55c4.35,2.7,8.48,5.96,12.48,9.3 c1.33,1.11,2.64,2.23,3.95,3.34c0.56,0.47,1.12,0.96,1.69,1.44c0.28,0.24,0.56,0.48,0.85,0.72c0.57,0.47,1.13,0.96,1.7,1.43 c0.71,0.59,1.43,1.18,2.16,1.77c0.43,0.35,0.86,0.7,1.3,1.05c0.58,0.46,1.17,0.92,1.76,1.38c6.2,4.76,12.87,8.91,20.63,11.08 c49.44,2.83,99.79,4.2,148.48,5.52c9.12,0.25,18.34,0.51,27.62,0.77c12.75,0.36,25.59,0.74,38.44,1.16 c7.56,0.26,15.11,0.52,22.65,0.8v-29.98c-17.51-3.5-35.32-7.15-52.54-10.68c-34.44-7.05-70.06-14.34-105.08-20.85 c-36.03-3-73.03-3-108.83-3c-3,4.13-5.86,8.32-8.63,12.38c-1.38,2.02-2.79,4.09-4.22,6.15c-0.71,1.04-1.44,2.08-2.17,3.11 C500.9,1310.21,500.54,1310.73,500.16,1311.25z"/> <path class="st29" d="M501.29,815.89c7.38,50.17,15.01,102.04,24.01,152.32c5.16,0,10.4,0.12,15.46,0.24 c12.54,0.3,25.5,0.61,37.81-1c23.28-17.2,45.97-35.79,67.92-53.77c10.64-8.71,21.64-17.73,32.63-26.52 c-22.77-9.51-45.69-18.86-68.59-28.06c-6.38-2.56-12.75-5.12-19.12-7.66c-5.02-2-10.04-3.99-15.04-5.98 c-14.09-5.6-28.13-11.14-42.1-16.63c-7.37-2.9-14.71-5.79-22.03-8.65C508.58,818.75,504.93,817.32,501.29,815.89z"/> <path class="st36" d="M586.86,973.51c-0.91,30.07,2.95,60.65,6.67,90.22c2.41,19.13,4.91,38.91,6.09,58.36 c94.34-21.04,189.89-43.74,282.29-65.7c9.96-2.36,19.93-4.73,29.9-7.1c-86.33-61.91-157.63-111.98-224.39-157.6 c-6.17,5.33-12.42,10.57-18.71,15.75c-1.8,1.49-3.59,2.96-5.4,4.43c0,0.01,0,0.01-0.01,0.01c-6.43,5.24-12.88,10.41-19.29,15.52 c-3.98,3.17-7.93,6.31-11.86,9.43c-2.8,2.23-5.63,4.47-8.45,6.72c-1.89,1.5-3.78,3.01-5.68,4.52 C607.61,956.41,597.1,964.9,586.86,973.51z"/> <path class="st37" d="M604.14,1144.72c3.17,19.32,7.21,38.99,11.12,58c0.33,1.63,0.67,3.27,1.01,4.91 c0.67,3.28,1.35,6.57,2.02,9.88c1.95,9.6,3.86,19.3,5.63,29.05c0.1,0.56,0.21,1.13,0.3,1.69c0.57,3.09,1.11,6.19,1.63,9.3 c0.52,3.09,1.03,6.19,1.51,9.28c0.83,5.31,1.6,10.62,2.28,15.92c23.65,4.13,47.49,9.09,70.56,13.89 c23.04,4.79,46.85,9.74,70.47,13.87c-8.13-8.36-16.36-16.8-24.69-25.3c-3.33-3.4-6.67-6.81-10.03-10.24 c-5.87-5.99-11.79-12-17.75-18.04c-3.07-3.11-6.15-6.22-9.24-9.35C675.16,1213.46,640.06,1178.75,604.14,1144.72z"/> <path class="st38" d="M720.55,1103.64c-38.6,9.13-76.99,18.38-114.89,27.51c47.34,48.53,96.54,97.01,144.12,143.88 c12.04,11.86,24.49,24.12,36.74,36.22c18.39-36.79,37.53-74.04,56.04-110.06c23.76-46.25,48.33-94.08,71.54-141.34 c-7.12,1.51-14.25,3.03-21.39,4.57c-7.5,1.61-14.99,3.25-22.5,4.9c-3.61,0.79-7.23,1.59-10.85,2.39 c-2.16,0.47-4.32,0.96-6.49,1.44c-30.98,6.89-62.02,14-92.99,21.23c-0.19,0.04-0.38,0.09-0.57,0.13 C746.38,1097.53,733.45,1100.58,720.55,1103.64z"/> <path class="st39" d="M681.49,727.37c11.06,28.01,22.5,56.98,36.73,83.96c24.47,14.43,50.86,25.87,76.38,36.92 c4.95,2.15,10.07,4.37,15.08,6.56C771.84,813.46,728.7,770.58,681.49,727.37z"/> <path class="st10" d="M716.72,822.64c-7.37,19.91-15,40.51-22.5,61.51c9.71,6.67,19.43,13.46,29.1,20.29 c11.29,7.96,22.52,15.97,33.62,23.92c4.76,3.41,9.49,6.8,14.2,10.18c8.37,6,16.8,12.05,25.28,18.1 c3.76,2.69,7.54,5.38,11.33,8.06c33.16,23.55,67.12,47.05,101.82,68.78c-10.55-24.05-22.26-48.29-33.57-71.72 c-8.81-18.24-17.92-37.11-26.45-55.81c-1.44-2.7-2.73-5.63-3.98-8.45c-3.98-9.01-8.09-18.32-17.78-22.32 C791.65,857.47,754.27,839.17,716.72,822.64z"/> <path class="st40" d="M923.14,1065.89c-17.17,29.85-33.05,60.88-47.24,92.23c24.13-6.66,46.34-13.47,65.98-20.25 C935.98,1114.28,929.88,1089.89,923.14,1065.89z"/> <path class="st41" d="M930.74,1052.28c0,5.24,0.65,10.5,2.19,15.8c1.31,5.25,2.69,10.55,4.07,15.83 c1.39,5.28,2.8,10.53,4.18,15.7c0.69,2.58,1.39,5.18,2.08,7.79c0.44,1.66,0.88,3.31,1.32,4.98c0.61,2.28,1.21,4.57,1.81,6.86 c1.03,3.96,2.05,7.92,3.03,11.85c12.12-14.32,23.66-29.36,34.83-43.89c4.05-5.28,8.24-10.73,12.42-16.11 c-1.54-2.66-3.06-5.33-4.57-8.02c-1.32-2.33-2.61-4.66-3.9-7c-1.85-3.35-3.68-6.7-5.49-10.05c-2.72-5.02-5.4-10.02-8.04-14.95 c-8.07-15.07-16.41-30.64-25.24-45.49c-1.97,6.88-4.55,13.71-7.28,20.94C936.52,1021.42,930.74,1036.71,930.74,1052.28z"/> <path class="st42" d="M969.62,912.06c-5.93,19.13-12.07,38.91-15.67,59.17c9.46,20.91,20.81,41.6,31.79,61.61 c5.61,10.24,11.42,20.82,16.98,31.43c3.75-4.92,7.61-9.89,11.47-14.82c2.31-2.96,4.62-5.89,6.9-8.8 c1.52-1.94,3.06-3.89,4.6-5.85c4.62-5.89,9.28-11.87,13.79-17.78c-18.66-47.79-38.35-96.25-58.52-144.05 C977.65,886.17,973.57,899.33,969.62,912.06z"/> </g> </g> </g> </g> ';
        string memory image2 = string(abi.encodePacked('<text x="-1400" y="1650" class="small" transform="scale(-1, 1)">Attack: ',attack,' &#9876;</text> <text x="-1400" y="1730" class="small" transform="scale(-1, 1)">Defense: ',defense,' &#128737;</text> <text x="-1400" y="-50" class="small" transform="scale(-1, 1)">Alive: ',_daysAlive,' Days &#9200;</text> <text x="-1400" y="30" class="small" transform="scale(-1, 1)">Level: ',_level,' &#127894;</text>'));
        string memory image3 = string(abi.encodePacked(' <text x="-570" y="-80" class="small" transform="scale(-1, 1)"># ',tokenId,'</text> <text x="35" y="-50" class="small" transform="scale(-1, 1)">Revived: ',_revived,'</text> <text x="-710" y="1730" class="small" transform="scale(-1, 1)">Kills Count: ',kills.toString(),' &#128128;</text> <text x="35" y="1730" class="small" transform="scale(-1, 1)">Team Rabbit &#129365;</text> </svg>'));
        string memory result = string(abi.encodePacked(image1,image2,image3));
        return result;
    }

    function calculateDaysAlive(uint256 timestamp) internal view returns(uint256) {
        return (((block.timestamp - timestamp) / 86400)+1);
    }

    function calculatePlayerLevel(uint256 timestamp, uint256 kills) internal view returns(uint256) {
        return calculateDaysAlive(timestamp)/10 + kills/2;
    }

    function revivedToString(bool revived) internal pure returns(string memory) {
        if (revived) {
            return "Yes &#128528;";
        } else {
            return "No &#128512;";
        }
    }
}